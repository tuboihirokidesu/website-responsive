{"version":3,"sources":["components/Button.tsx","components/Navbar.tsx","globalStyles.ts","App.tsx","index.tsx"],"names":["STYLES","SIZES","COLOR","Button","buttonColor","buttonSize","type","buttonStyle","children","onClick","checkButtonStyle","includes","checkButtonSize","checkButtonColor","BtnMobile","to","className","Btn","styled","button","Link","Navbar","useState","click","setClick","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","Nav","NavContainer","Logo","MenuIcon","FATimes","FABars","NavWrap","NavItems","NavLinks","nav","div","FaBars","FaTimes","ul","li","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"8NAWMA,EAAS,CAAC,eAAgB,gBAC1BC,EAAQ,CAAC,cAAe,aAAc,aAAc,YACpDC,EAAQ,CAAC,UAAW,OAAQ,MAAO,SA6B1BC,EA3B0B,SAAC,GAOnC,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,WACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAEMC,EAAmBV,EAAOW,SAASJ,GACrCA,EACAP,EAAO,GACLY,EAAkBX,EAAMU,SAASN,GAAeA,EAAaJ,EAAM,GACnEY,EAAmBX,EAAMS,SAASP,GAAgBA,EAAc,KAEtE,OACE,cAACU,EAAD,CAAWC,GAAG,WAAWC,UAAU,aAAnC,SACE,cAACC,EAAD,CACED,UAAS,UAAKN,EAAL,YAAyBE,EAAzB,YAA4CC,GACrDJ,QAASA,EACTH,KAAMA,EAHR,SAKGE,OAQHS,EAAMC,IAAOC,OAAV,29DAqHHL,EAAYI,YAAOE,IAAPF,CAAH,4H,QCpFAG,EAvEA,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACZC,EADY,KACLC,EADK,OAESF,oBAAS,GAFlB,mBAEZH,EAFY,KAEJM,EAFI,KAKbC,EAAkB,kBAAMF,GAAS,IAEjCG,EAAa,WACbC,OAAOC,YAAc,IACvBJ,GAAU,GAEVA,GAAU,IASd,OALAK,qBAAU,WACRH,MACC,IACHC,OAAOG,iBAAiB,SAAUJ,GAGhC,mCACE,cAACK,EAAD,UACE,eAACC,EAAD,WACE,eAACC,EAAD,CAAMnB,GAAG,IAAT,iBAEE,mBAAGC,UAAU,oBAEf,cAACmB,EAAD,CAAU1B,QAxBE,kBAAMe,GAAUD,IAwB5B,SACGA,EAAQ,cAACa,EAAD,IAAc,cAACC,EAAD,MAEzB,eAACC,EAAD,CAASf,MAAOA,EAAhB,UACE,cAACgB,EAAD,UACE,cAACC,EAAD,CAAUzB,GAAG,IAAIN,QAASiB,EAA1B,oBAIF,cAACa,EAAD,UACE,cAACC,EAAD,CAAUzB,GAAG,WAAWN,QAASiB,EAAjC,uBAIF,cAACa,EAAD,UACE,cAACC,EAAD,CAAUzB,GAAG,YAAYN,QAASiB,EAAlC,wBAIF,cAACa,EAAD,UACGpB,EACC,cAACqB,EAAD,CAAUzB,GAAG,WAAb,SACE,cAAC,EAAD,CAAQR,YAAY,eAApB,uBAGF,cAACiC,EAAD,CAAUzB,GAAG,WAAb,SACE,cAAC,EAAD,CACER,YAAY,eACZF,WAAW,cACXI,QAASiB,EAHX,oCAmBZM,EAAMd,IAAOuB,IAAV,uMAUHR,EAAef,IAAOwB,IAAV,wHAMZR,EAAOhB,YAAOE,IAAPF,CAAH,mVAiBJiB,EAAWjB,IAAOwB,IAAV,8PAaRL,EAASnB,YAAOyB,IAAPzB,CAAH,4CAINkB,EAAUlB,YAAO0B,IAAP1B,CAAH,gEAKPoB,EAAUpB,IAAO2B,GAAV,2IAOPN,EAAWrB,IAAO4B,GAAV,gJAQRN,EAAWtB,YAAOE,IAAPF,CAAH,0JCtIC6B,EAbKC,YAAH,oPCUFC,EATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.734a4b49.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\n\ntype Props = {\n  onClick: () => void;\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\n  buttonStyle: string;\n  buttonSize: string;\n  buttonColor: string;\n};\n\nconst STYLES = [\"btn--primary\", \"btn--outline\"];\nconst SIZES = [\"btn--medium\", \"btn--large\", \"btn-mobile\", \"btn-wide\"];\nconst COLOR = [\"primary\", \"blue\", \"red\", \"green\"];\n\nconst Button: React.FC<Partial<Props>> = ({\n  buttonColor,\n  buttonSize,\n  type,\n  buttonStyle,\n  children,\n  onClick,\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle!)\n    ? buttonStyle\n    : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize!) ? buttonSize : SIZES[0];\n  const checkButtonColor = COLOR.includes(buttonColor!) ? buttonColor : null;\n\n  return (\n    <BtnMobile to='/sign-up' className='btn-mobile'>\n      <Btn\n        className={`${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </Btn>\n    </BtnMobile>\n  );\n};\n\nexport default Button;\n\nconst Btn = styled.button`\n  padding: 8px 20px;\n  border-radius: 2px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin: 6px;\n\n  :root {\n    --primary: #fff;\n  }\n\n  .btn--primary {\n    background-color: var(--primary);\n    color: #242424;\n    border: 1px solid var(--primary);\n  }\n\n  .btn--outline {\n    background-color: transparent;\n    color: #fff;\n    padding: 8px 20px;\n    border: 1px solid var(--primary);\n    transition: all 0.3s ease-out;\n  }\n\n  .btn--medium {\n    padding: 8px 20px;\n    font-size: 18px;\n  }\n\n  .btn--large {\n    padding: 12px 26px;\n    font-size: 20px;\n  }\n\n  .btn--mobile {\n    text-align: center;\n    border-radius: 4px;\n    width: 80%;\n    text-decoration: none;\n    font-size: 1.5rem;\n    background-color: transparent;\n    color: #fff;\n    padding: 14px 20px;\n    border: 1px solid #fff;\n    transition: all 0.3s ease-out;\n  }\n\n  .btn--wide {\n    padding: 12px 64px;\n    font-size: 20px;\n  }\n\n  .btn--large:hover,\n  .btn--medium:hover,\n  .btn--mobile:hover {\n    transition: all 0.3s ease-out;\n    background: #fff;\n    color: #242424;\n  }\n\n  .btn--wide:hover {\n    color: #fff;\n    background-color: #f00946;\n    transition: all 0.2s ease-out;\n  }\n\n  .btn-link {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    padding: 8px 16px;\n    height: 100%;\n    width: 100%;\n  }\n\n  .blue {\n    background-color: #276afb;\n    color: #fff;\n    border: none;\n  }\n\n  .red {\n    background-color: #f00946;\n    color: #fff;\n    border: none;\n  }\n\n  .primary {\n    background-color: #242424;\n    color: #fff;\n    border: none;\n  }\n\n  .primary:hover {\n    background-color: #fff;\n    color: #242424;\n    border: none;\n  }\n\n  .green {\n    background: #25ce4a;\n    color: #fff;\n    border: none;\n  }\n\n  .green:hover {\n    background-color: #242424;\n  }\n\n  @media screen and (max-width: 960px) {\n    width: 100%;\n  }\n`;\n\nconst BtnMobile = styled(Link)`\n  @media screen and (max-width: 960px) {\n    display: block;\n    text-decoration: none;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\n\nconst Navbar = () => {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n  window.addEventListener(\"resize\", showButton);\n\n  return (\n    <>\n      <Nav>\n        <NavContainer>\n          <Logo to='/'>\n            TRVL\n            <i className='fab fa-typo3' />\n          </Logo>\n          <MenuIcon onClick={handleClick}>\n            {click ? <FATimes /> : <FABars />}\n          </MenuIcon>\n          <NavWrap click={click}>\n            <NavItems>\n              <NavLinks to='/' onClick={closeMobileMenu}>\n                Home\n              </NavLinks>\n            </NavItems>\n            <NavItems>\n              <NavLinks to='/service' onClick={closeMobileMenu}>\n                Service\n              </NavLinks>\n            </NavItems>\n            <NavItems>\n              <NavLinks to='/products' onClick={closeMobileMenu}>\n                Products\n              </NavLinks>\n            </NavItems>\n            <NavItems>\n              {button ? (\n                <NavLinks to='/sign-up'>\n                  <Button buttonStyle='btn--outline'>SIGN UP</Button>\n                </NavLinks>\n              ) : (\n                <NavLinks to='/sign-up'>\n                  <Button\n                    buttonStyle='btn--outline'\n                    buttonSize='btn--mobile'\n                    onClick={closeMobileMenu}\n                  >\n                    SIGN UP\n                  </Button>\n                </NavLinks>\n              )}\n            </NavItems>\n          </NavWrap>\n        </NavContainer>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n\nconst Nav = styled.nav`\n  display: flex;\n  height: 80px;\n  z-index: 999;\n  position: sticky;\n  font-size: 1.2rem;\n  background: #1c2237;\n  justify-content: center;\n  align-items: center;\n`;\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  max-width: 1300px;\n`;\nconst Logo = styled(Link)`\n  color: #fff;\n  cursor: pointer;\n  position: flex;\n  justify-self: start;\n  align-items: center;\n  font-size: 2rem;\n  text-decoration: none;\n  margin-right: 120px;\n\n  @media screen and (max-width: 960px) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(25%, 50%);\n  }\n`;\nconst MenuIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 960px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\nconst FABars = styled(FaBars)`\n  color: #fff;\n`;\n\nconst FATimes = styled(FaTimes)`\n  color: #fff;\n  font-size: 2rem;\n`;\n\nconst NavWrap = styled.ul<{ click: boolean }>`\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n`;\nconst NavItems = styled.li`\n  height: 80px;\n  border-bottom: 2px solid transparent;\n\n  :hover {\n    border-bottom: 2px solid #f00946;\n  }\n`;\nconst NavLinks = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  height: 100%;\n  padding: 0.5rem 1rem;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      font-family: 'Montserrat', sans-serif;\n      font-family: 'PT Sans', sans-serif;\n  }\n  html, body{\n      overflow-x: hidden;\n  }\n`;\n\nexport default GlobalStyle;\n","import Navbar from \"./components/Navbar\";\nimport GlobalStyle from \"./globalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Navbar />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}